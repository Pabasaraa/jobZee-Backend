name: Deploy on Production

on:
  workflow_dispatch:

jobs:
  deploy_on_production:
    runs-on: [ubuntu-latest]

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # Application microservice
      - name: Create Env file for Application microservice
        working-directory: ./application
        run: |
          touch .env
          echo JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }} >> .env
          echo MONGO_URI=${{ secrets.MONGO_URI }} >> .env
          echo JWT_EXPIRES=${{ secrets.JWT_EXPIRES }} >> .env
          echo COOKIE_EXPIRE=${{ secrets.COOKIE_EXPIRE }} >> .env
          echo CLOUDINARY_CLIENT_NAME=${{ secrets.CLOUDINARY_CLIENT_NAME }} >> .env
          echo CLOUDINARY_CLIENT_API=${{ secrets.CLOUDINARY_CLIENT_API }} >> .env
          echo CLOUDINARY_CLIENT_SECRET=${{ secrets.CLOUDINARY_CLIENT_SECRET }} >> .env
          echo PORT=4003 >> .env
          cat .env

      - name: Install Dependencies in Application microservice
        working-directory: ./application
        run: |
          npm install

      - name: Generate deployment package for Application microservice
        working-directory: ./application
        run: |
          zip -r application.zip .

      - name: Deploy Application microservice on Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ctse-app
          environment_name: application-env
          version_label: "ver-${{ github.sha }}"
          region: eu-north-1
          deployment_package: ./application/application.zip

      # Blogs microservice
      - name: Create Env file for Blogs microservice
        working-directory: ./blog
        run: |
          touch .env
          echo JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }} >> .env
          echo MONGO_URI=${{ secrets.MONGO_URI }} >> .env
          echo JWT_EXPIRES=${{ secrets.JWT_EXPIRES }} >> .env
          echo COOKIE_EXPIRE=${{ secrets.COOKIE_EXPIRE }} >> .env
          echo CLOUDINARY_CLIENT_NAME=${{ secrets.CLOUDINARY_CLIENT_NAME }} >> .env
          echo CLOUDINARY_CLIENT_API=${{ secrets.CLOUDINARY_CLIENT_API }} >> .env
          echo CLOUDINARY_CLIENT_SECRET=${{ secrets.CLOUDINARY_CLIENT_SECRET }} >> .env
          echo PORT=4004 >> .env
          cat .env

      - name: Install Dependencies in Blogs microservice
        working-directory: ./blog
        run: |
          npm install

      - name: Generate deployment package for Blogs microservice
        working-directory: ./blog
        run: |
          zip -r blog.zip .

      - name: Deploy Blogs microservice on Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ctse-app
          environment_name: blog-env
          version_label: "ver-${{ github.sha }}"
          region: eu-north-1
          deployment_package: ./blog/blog.zip

      # Jobs microservice
      - name: Create Env file for Jobs microservice
        working-directory: ./job
        run: |
          touch .env
          echo JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }} >> .env
          echo MONGO_URI=${{ secrets.MONGO_URI }} >> .env
          echo JWT_EXPIRES=${{ secrets.JWT_EXPIRES }} >> .env
          echo COOKIE_EXPIRE=${{ secrets.COOKIE_EXPIRE }} >> .env
          echo CLOUDINARY_CLIENT_NAME=${{ secrets.CLOUDINARY_CLIENT_NAME }} >> .env
          echo CLOUDINARY_CLIENT_API=${{ secrets.CLOUDINARY_CLIENT_API }} >> .env
          echo CLOUDINARY_CLIENT_SECRET=${{ secrets.CLOUDINARY_CLIENT_SECRET }} >> .env
          echo PORT=4001 >> .env
          cat .env

      - name: Install Dependencies in Jobs microservice
        working-directory: ./job
        run: |
          npm install

      - name: Generate deployment package for Jobs microservice
        working-directory: ./job
        run: |
          zip -r job.zip .

      - name: Deploy Jobs microservice on Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ctse-app
          environment_name: job-env
          version_label: "ver-${{ github.sha }}"
          region: eu-north-1
          deployment_package: ./job/job.zip

      # User microservice
      - name: Create Env file for User microservice
        working-directory: ./user
        run: |
          touch .env
          echo JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }} >> .env
          echo MONGO_URI=${{ secrets.MONGO_URI }} >> .env
          echo JWT_EXPIRES=${{ secrets.JWT_EXPIRES }} >> .env
          echo COOKIE_EXPIRE=${{ secrets.COOKIE_EXPIRE }} >> .env
          echo CLOUDINARY_CLIENT_NAME=${{ secrets.CLOUDINARY_CLIENT_NAME }} >> .env
          echo CLOUDINARY_CLIENT_API=${{ secrets.CLOUDINARY_CLIENT_API }} >> .env
          echo CLOUDINARY_CLIENT_SECRET=${{ secrets.CLOUDINARY_CLIENT_SECRET }} >> .env
          echo PORT=4002 >> .env
          cat .env

      - name: Install Dependencies in User microservice
        working-directory: ./user
        run: |
          npm install

      - name: Generate deployment package for User microservice
        working-directory: ./user
        run: |
          zip -r user.zip .

      - name: Deploy User microservice on Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ctse-app
          environment_name: user-env
          version_label: "ver-${{ github.sha }}"
          region: eu-north-1
          deployment_package: ./user/user.zip

    env:
      DEBUG: true
